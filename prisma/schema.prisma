generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

// Reuse
enum Role {
  admin
  user
  owner
}

model Tag {
  id String @id @default(uuid())

  value           String
  accommodation   Accommodation? @relation(fields: [accommodationId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  accommodationId String?

  @@index([accommodationId])
}

model Image {
  id              String         @id @default(cuid())
  url             String
  imgId           String
  accommodation   Accommodation? @relation(fields: [accommodationId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  accommodationId String?

  @@index([accommodationId])
}

model Payment {
  id      String   @id @default(uuid())
  isPaid  Boolean  @default(false)
  paidAt  DateTime
  expaire DateTime
  User    User[]
}

model User {
  id             String          @id @default(cuid())
  name           String
  email          String          @unique
  password       String
  phoneNumber    String
  isEmailVerify  Boolean         @default(false)
  isNumberVerify Boolean         @default(false)
  country        String
  role           Role            @default(owner)
  city           String
  createdAt      DateTime        @default(now())
  accommodations Accommodation[]
  payment        Payment?        @relation(fields: [paymentId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  profile        Profile?
  paymentId      String?

  @@index([paymentId])
}

model Profile {
  id       String @id @default(cuid())
  image    String
  bio      String
  category String
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId   String @unique
}

model Accommodation {
  id          String  @id @default(cuid())
  title       String
  type        String
  price       Int
  bedrooms    Int
  beds        Int?
  sofa        Int?
  street      String
  city        String
  country     String
  bathrooms   Int
  duration    String
  purpose     String
  isAvailable Boolean @default(true)
  area        Int
  tags        Tag[]
  images      Image[]
  description String  @db.LongText
  owner       User?   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId      String?

  @@index([userId])
}

model GeustHouse {
  id          String @id @default(cuid())
  location    String
  price       Int
  bed         String
  description String
}
